<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.epay.scanposp.dao.PayQrCodeMapper">
  <resultMap id="BaseResultMap" type="com.epay.scanposp.entity.PayQrCode">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="payee_id" jdbcType="INTEGER" property="payeeId" />
    <result column="qr_code_remark" jdbcType="VARCHAR" property="qrCodeRemark" />
    <result column="qr_code" jdbcType="VARCHAR" property="qrCode" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, money, qr_code_remark, payee_id, qr_code, pay_type, file_path,status,
    create_by, create_date, update_by, update_date,del_flag,remarks 
  </sql>
  <select id="selectByExample" parameterType="com.epay.scanposp.entity.PayQrCodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_pay_qrcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;=0">
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bu_pay_qrcode
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bu_pay_qrcode
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.epay.scanposp.entity.PayQrCodeExample">
    delete from bu_pay_qrcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <select id="countByExample" parameterType="com.epay.scanposp.entity.PayQrCodeExample" resultType="java.lang.Integer">
    select count(*) from bu_pay_qrcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
 
  <update id="updateByPrimaryKey" parameterType="com.epay.scanposp.entity.PayQrCode">
    update bu_pay_qrcode
    set money = #{money,jdbcType=DECIMAL},
      qr_code_remark = #{qrCodeRemark,jdbcType=VARCHAR},
      payee_id = #{payeeId,jdbcType=INTEGER},
      qr_code = #{qrCode,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByMap"  parameterType="java.util.Map" resultMap="BaseResultMap">
  	SELECT a.id,a.money,a.payee_id,a.qr_code,a.qr_code_remark,a.pay_type,a.file_path,a.status,
  	a.create_by, a.create_date, a.update_by, a.update_date,a.del_flag,a.remarks FROM (
  		SELECT q.id,q.money,q.qr_code,q.qr_code_remark,q.payee_id,q.pay_type,q.file_path,q.status,
  		q.create_by, q.create_date, q.update_by, q.update_date,q.del_flag,q.remarks,IFNULL(s.counts,0) counts FROM bu_pay_qrcode q 
  		LEFT JOIN(
		SELECT t.payee_id,t.counts FROM bu_pay_qrcode_total t where t.trade_date=#{tradeDate,jdbcType=VARCHAR} )s 
		ON q.payee_id=s.payee_id
  		WHERE q.money=#{money,jdbcType=DECIMAL} AND q.pay_type= #{payType,jdbcType=VARCHAR}
  		 AND q.`status`='0' AND q.del_flag='0'
  		 <if test="payeeList != null and payeeList != ''">
  		 	AND q.payee_id NOT IN 
  		 	<foreach close=")" collection="payeeList" item="listItem" open="(" separator=",">
              #{listItem}
            </foreach>
  		 </if>
  	) a ORDER BY a.counts,id 
  	<if test="limitStart != null and limitStart&gt;=0">
      limit #{limitStart} , #{limitSize}
    </if>
  
  </select>
  
  
</mapper>